import { PropTypes, NormalizeProps } from '@zag-js/types';
import { State, Send, OptionData, OptionProps, OptionGroupProps } from './combobox.types.js';
import '@zag-js/core';
import '@zag-js/interact-outside';
import '@zag-js/popper';

declare function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): {
    /**
     * Whether the combobox is focused
     */
    isFocused: boolean;
    /**
     * Whether the combobox content or listbox is open
     */
    isOpen: boolean;
    /**
     * Whether the combobox input is empty
     */
    isInputValueEmpty: boolean;
    /**
     * The current value of the combobox input
     */
    inputValue: string;
    /**
     * The currently focused option (by pointer or keyboard)
     */
    focusedOption: OptionData | null;
    /**
     * The currently selected option value
     */
    selectedValue: string | undefined;
    /**
     * Function to set the combobox value
     */
    setValue(value: string | OptionData): void;
    /**
     * Function to set the combobox input value
     */
    setInputValue(value: string): void;
    /**
     * Function to clear the combobox input value and selected value
     */
    clearValue(): void;
    /**
     * Function to focus the combobox input
     */
    focus(): void;
    rootProps: T["element"];
    labelProps: T["label"];
    controlProps: T["element"];
    positionerProps: T["element"];
    inputProps: T["input"];
    triggerProps: T["button"];
    contentProps: T["element"];
    clearTriggerProps: T["button"];
    getOptionState(props: OptionProps): {
        disabled: boolean | undefined;
        focused: boolean;
        checked: boolean;
    };
    getOptionProps(props: OptionProps): T["element"];
    getOptionGroupProps(props: OptionGroupProps): T["element"];
};

export { connect };
