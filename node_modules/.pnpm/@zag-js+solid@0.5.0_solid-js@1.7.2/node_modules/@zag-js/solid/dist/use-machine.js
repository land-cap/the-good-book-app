"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/use-machine.ts
var use_machine_exports = {};
__export(use_machine_exports, {
  useMachine: () => useMachine,
  useService: () => useService
});
module.exports = __toCommonJS(use_machine_exports);
var import_solid_js = require("solid-js");
var import_store = require("solid-js/store");
function useService(machine, options) {
  const { actions, state: hydratedState, context } = options ?? {};
  const service = (() => {
    const _machine = typeof machine === "function" ? machine() : machine;
    const contextValue = typeof context === "function" ? context() : context;
    return contextValue ? _machine.withContext(contextValue) : _machine;
  })();
  (0, import_solid_js.onMount)(() => {
    service.start(hydratedState);
    if (service.state.can("SETUP")) {
      service.send("SETUP");
    }
    (0, import_solid_js.onCleanup)(() => {
      service.stop();
    });
  });
  (0, import_solid_js.createEffect)(() => {
    const contextValue = typeof context === "function" ? context() : context;
    service.setContext(contextValue);
  });
  (0, import_solid_js.createEffect)(() => {
    service.setOptions({ actions });
  });
  return service;
}
function useMachine(machine, options) {
  const service = useService(machine, options);
  const [state, setState] = (0, import_store.createStore)(service.getState());
  (0, import_solid_js.onMount)(() => {
    const unsubscribe = service.subscribe((nextState) => {
      setState((0, import_store.reconcile)(nextState));
    });
    (0, import_solid_js.onCleanup)(() => {
      unsubscribe();
    });
  });
  return [state, service.send, service];
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useMachine,
  useService
});
