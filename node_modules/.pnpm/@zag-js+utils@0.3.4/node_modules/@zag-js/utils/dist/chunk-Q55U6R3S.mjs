// src/object.ts
function compact(obj) {
  if (!isPlainObject(obj) || obj === void 0) {
    return obj;
  }
  const keys = Reflect.ownKeys(obj).filter((key) => typeof key === "string");
  const filtered = {};
  for (const key of keys) {
    const value = obj[key];
    if (value !== void 0) {
      filtered[key] = compact(value);
    }
  }
  return filtered;
}
function json(value) {
  return JSON.parse(JSON.stringify(value));
}
var isPlainObject = (value) => {
  return value && typeof value === "object" && value.constructor === Object;
};

export {
  compact,
  json
};
