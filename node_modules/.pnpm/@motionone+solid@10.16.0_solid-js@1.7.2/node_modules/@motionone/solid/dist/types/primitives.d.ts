import { MotionState } from "@motionone/dom";
import { Accessor } from "solid-js";
import { PresenceContextState } from "./presence";
import { Options } from "./types";
export declare const onCompleteExit: (el: Element, fn: VoidFunction) => void;
/** @internal */
export declare function createAndBindMotionState(el: () => Element, options: Accessor<Options>, presenceState?: PresenceContextState, parentState?: MotionState): readonly [MotionState, any];
/**
 * createMotion provides MotionOne as a compact Solid primitive.
 *
 * @param target Target Element to animate.
 * @param options Options to effect the animation.
 * @param presenceState Optional PresenceContext override, defaults to current parent.
 * @returns Object to access MotionState
 */
export declare function createMotion(target: Element, options: Accessor<Options> | Options, presenceState?: PresenceContextState): MotionState;
/**
 * motion is a Solid directive that makes binding to elements easier.
 *
 * @param el Target Element to bind to.
 * @param props Options to effect the animation.
 */
export declare function motion(el: Element, props: Accessor<Options>): void;
