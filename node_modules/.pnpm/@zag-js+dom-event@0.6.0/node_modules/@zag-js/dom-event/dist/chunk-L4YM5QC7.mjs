import {
  getElementOffset
} from "./chunk-LYGZVQ73.mjs";

// src/point-value.ts
var clamp = (value) => Math.max(0, Math.min(1, value));
function getRelativePointValue(absolutePoint, element) {
  const offset = getElementOffset(element);
  const x = absolutePoint.x - offset.left;
  const y = absolutePoint.y - offset.top;
  return {
    x,
    y,
    getDelta(origin) {
      return { x: x - origin.x, y: y - origin.y };
    }
  };
}
function getRelativePointPercent(absolutePoint, element) {
  const relativePoint = getRelativePointValue(absolutePoint, element);
  const x = clamp(relativePoint.x / element.offsetWidth);
  const y = clamp(relativePoint.y / element.offsetHeight);
  return {
    x,
    y,
    normalize(options = {}) {
      const { dir = "ltr", orientation = "horizontal" } = options;
      let newX = x;
      if (orientation === "horizontal" && dir === "rtl")
        newX = 1 - newX;
      return orientation === "horizontal" ? newX : y;
    }
  };
}

export {
  getRelativePointValue,
  getRelativePointPercent
};
