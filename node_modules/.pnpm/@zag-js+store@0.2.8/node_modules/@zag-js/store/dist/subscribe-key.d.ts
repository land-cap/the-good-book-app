type CompareFn<T = any> = (prev: T, next: T) => boolean;
declare function subscribeKey<T extends object, K extends keyof T>(obj: T, key: K, fn: (value: T[K]) => void, sync?: boolean, compareFn?: (prev: T[K], next: T[K]) => boolean): () => void;

export { CompareFn, subscribeKey };
