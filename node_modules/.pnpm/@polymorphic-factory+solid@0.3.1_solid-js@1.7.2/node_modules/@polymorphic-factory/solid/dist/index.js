"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  polymorphicFactory: () => polymorphicFactory
});
module.exports = __toCommonJS(src_exports);

// src/polymorphic-factory.tsx
var import_web = require("solid-js/web");
var import_web2 = require("solid-js/web");
var import_solid_js = require("solid-js");
var import_web3 = require("solid-js/web");
function defaultStyled(originalComponent) {
  return (props) => {
    const [local, others] = (0, import_solid_js.splitProps)(props, ["as"]);
    const component = local.as || originalComponent;
    return (0, import_web.createComponent)(import_web3.Dynamic, (0, import_web2.mergeProps)({
      component
    }, others));
  };
}
function polymorphicFactory({
  styled = defaultStyled
} = {}) {
  const cache = /* @__PURE__ */ new Map();
  return new Proxy(styled, {
    /**
     * @example
     * const Div = poly("div")
     * const WithPoly = poly(AnotherComponent)
     */
    apply(target, thisArg, argArray) {
      return styled(...argArray);
    },
    /**
     * @example
     * <poly.div />
     */
    get(_, element) {
      const asElement = element;
      if (!cache.has(asElement)) {
        cache.set(asElement, styled(asElement));
      }
      return cache.get(asElement);
    }
  });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  polymorphicFactory
});
