// node_modules/.pnpm/@zag-js+dom-query@0.1.4/node_modules/@zag-js/dom-query/dist/chunk-IWAFZYOG.mjs
function raf(fn) {
  const id = globalThis.requestAnimationFrame(fn);
  return () => {
    globalThis.cancelAnimationFrame(id);
  };
}

// node_modules/.pnpm/@zag-js+dom-query@0.1.4/node_modules/@zag-js/dom-query/dist/chunk-FKYCQ46C.mjs
function isHTMLElement(value) {
  return typeof value === "object" && (value == null ? void 0 : value.nodeType) === Node.ELEMENT_NODE && typeof (value == null ? void 0 : value.nodeName) === "string";
}

// node_modules/.pnpm/@zag-js+dom-query@0.1.4/node_modules/@zag-js/dom-query/dist/chunk-5P7ELUHO.mjs
function queryAll(root, selector) {
  return Array.from((root == null ? void 0 : root.querySelectorAll(selector)) ?? []);
}

// node_modules/.pnpm/@zag-js+dom-query@0.1.4/node_modules/@zag-js/dom-query/dist/chunk-NX65SIAM.mjs
var dataAttr = (guard) => {
  return guard ? "" : void 0;
};
var ariaAttr = (guard) => {
  return guard ? "true" : void 0;
};

// node_modules/.pnpm/@zag-js+dom-query@0.1.4/node_modules/@zag-js/dom-query/dist/chunk-KP7WLHTU.mjs
function contains(parent, child) {
  if (!parent || !child)
    return false;
  if (!isHTMLElement(parent) || !isHTMLElement(child))
    return false;
  return parent === child || parent.contains(child);
}

// node_modules/.pnpm/@zag-js+dom-query@0.1.4/node_modules/@zag-js/dom-query/dist/chunk-SE66MIC6.mjs
var getDocument = (node) => {
  if (node.nodeType === Node.DOCUMENT_NODE)
    return node;
  return node.ownerDocument ?? document;
};
function createScope(methods) {
  const screen = {
    getRootNode: (ctx) => {
      var _a;
      return ((_a = ctx.getRootNode) == null ? void 0 : _a.call(ctx)) ?? document;
    },
    getDoc: (ctx) => getDocument(screen.getRootNode(ctx)),
    getWin: (ctx) => screen.getDoc(ctx).defaultView ?? window,
    getActiveElement: (ctx) => screen.getDoc(ctx).activeElement,
    getById: (ctx, id) => screen.getRootNode(ctx).getElementById(id),
    queryById: (ctx, id) => {
      const el = screen.getById(ctx, id);
      if (!el)
        throw new Error(`Element with id "${id}" not found.`);
      return el;
    }
  };
  return { ...screen, ...methods };
}

// node_modules/.pnpm/@zag-js+dom-query@0.1.4/node_modules/@zag-js/dom-query/dist/chunk-HFFOD2VR.mjs
function itemById(v, id) {
  return v.find((node) => node.id === id);
}
function indexOfId(v, id) {
  const item = itemById(v, id);
  return item ? v.indexOf(item) : -1;
}
function nextById(v, id, loop = true) {
  let idx = indexOfId(v, id);
  idx = loop ? (idx + 1) % v.length : Math.min(idx + 1, v.length - 1);
  return v[idx];
}
function prevById(v, id, loop = true) {
  let idx = indexOfId(v, id);
  if (idx === -1)
    return loop ? v[v.length - 1] : null;
  idx = loop ? (idx - 1 + v.length) % v.length : Math.max(0, idx - 1);
  return v[idx];
}

// node_modules/.pnpm/@zag-js+dom-query@0.1.4/node_modules/@zag-js/dom-query/dist/chunk-V62Z6HGQ.mjs
function getEventTarget(event) {
  var _a;
  return ((_a = event.composedPath) == null ? void 0 : _a.call(event)[0]) ?? event.target;
}

// node_modules/.pnpm/@zag-js+dom-query@0.1.4/node_modules/@zag-js/dom-query/dist/chunk-5LKYLKZ7.mjs
var isDocument = (el) => el.nodeType === Node.DOCUMENT_NODE;
function getDocument2(el) {
  if (isDocument(el))
    return el;
  return (el == null ? void 0 : el.ownerDocument) ?? document;
}
function getWindow(el) {
  return (el == null ? void 0 : el.ownerDocument.defaultView) ?? window;
}

// node_modules/.pnpm/@zag-js+dom-query@0.1.4/node_modules/@zag-js/dom-query/dist/chunk-CCVNLTYW.mjs
var getValueText = (item) => item.dataset.valuetext ?? item.textContent ?? "";
var match = (valueText, query2) => valueText.toLowerCase().startsWith(query2.toLowerCase());
var wrap = (v, idx) => {
  return v.map((_, index) => v[(Math.max(idx, 0) + index) % v.length]);
};
function getByText(v, text, currentId) {
  const index = currentId ? indexOfId(v, currentId) : -1;
  let items = currentId ? wrap(v, index) : v;
  const isSingleKey = text.length === 1;
  if (isSingleKey) {
    items = items.filter((item) => item.id !== currentId);
  }
  return items.find((item) => match(getValueText(item), text));
}

// node_modules/.pnpm/@zag-js+dom-query@0.1.4/node_modules/@zag-js/dom-query/dist/chunk-HHMPWUPM.mjs
function getByTypeaheadImpl(_items, options) {
  const { state: state2, activeId, key, timeout = 350 } = options;
  const search = state2.keysSoFar + key;
  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);
  const query2 = isRepeated ? search[0] : search;
  let items = _items.slice();
  const next2 = getByText(items, query2, activeId);
  function cleanup() {
    clearTimeout(state2.timer);
    state2.timer = -1;
  }
  function update(value) {
    state2.keysSoFar = value;
    cleanup();
    if (value !== "") {
      state2.timer = +setTimeout(() => {
        update("");
        cleanup();
      }, timeout);
    }
  }
  update(search);
  return next2;
}
var getByTypeahead = Object.assign(getByTypeaheadImpl, {
  defaultOptions: { keysSoFar: "", timer: -1 },
  isValidEvent: isValidTypeaheadEvent
});
function isValidTypeaheadEvent(event) {
  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;
}

// node_modules/.pnpm/@zag-js+utils@0.3.4/node_modules/@zag-js/utils/dist/chunk-27EXK2DH.mjs
var first = (v) => v[0];
var last = (v) => v[v.length - 1];

// node_modules/.pnpm/@zag-js+utils@0.3.4/node_modules/@zag-js/utils/dist/chunk-Q55U6R3S.mjs
function compact(obj) {
  if (!isPlainObject(obj) || obj === void 0) {
    return obj;
  }
  const keys = Reflect.ownKeys(obj).filter((key) => typeof key === "string");
  const filtered = {};
  for (const key of keys) {
    const value = obj[key];
    if (value !== void 0) {
      filtered[key] = compact(value);
    }
  }
  return filtered;
}
var isPlainObject = (value) => {
  return value && typeof value === "object" && value.constructor === Object;
};

// node_modules/.pnpm/@zag-js+utils@0.3.4/node_modules/@zag-js/utils/dist/chunk-YKQM3BDH.mjs
var callAll = (...fns) => (...a) => {
  fns.forEach(function(fn) {
    fn == null ? void 0 : fn(...a);
  });
};
var uuid = (() => {
  let id = 0;
  return () => {
    id++;
    return id.toString(36);
  };
})();

// node_modules/.pnpm/@zag-js+dom-event@0.6.0/node_modules/@zag-js/dom-event/dist/chunk-UEVXZJ4S.mjs
var addDomEvent = (target, eventName, handler, options) => {
  const node = typeof target === "function" ? target() : target;
  node == null ? void 0 : node.addEventListener(eventName, handler, options);
  return () => {
    node == null ? void 0 : node.removeEventListener(eventName, handler, options);
  };
};

// node_modules/.pnpm/@zag-js+text-selection@0.0.1/node_modules/@zag-js/text-selection/dist/index.mjs
var state = "default";
var userSelect = "";
var elementMap = /* @__PURE__ */ new WeakMap();
var isIos2 = () => {
  const userAgent = navigator.userAgent.toLowerCase();
  return /iphone|ipad|ipod/.test(userAgent);
};
var nextTick2 = (fn) => {
  requestAnimationFrame(() => {
    requestAnimationFrame(() => {
      fn();
    });
  });
};
function disableTextSelection({ target, doc } = {}) {
  const _document = doc ?? document;
  const rootEl = _document.documentElement;
  if (isIos2()) {
    if (state === "default") {
      userSelect = rootEl.style.webkitUserSelect;
      rootEl.style.webkitUserSelect = "none";
    }
    state = "disabled";
  } else if (target) {
    elementMap.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
  return () => restoreTextSelection({ target, doc: _document });
}
function restoreTextSelection({ target, doc } = {}) {
  const _document = doc ?? document;
  const rootEl = _document.documentElement;
  if (isIos2()) {
    if (state !== "disabled")
      return;
    state = "restoring";
    setTimeout(() => {
      nextTick2(() => {
        if (state === "restoring") {
          if (rootEl.style.webkitUserSelect === "none") {
            rootEl.style.webkitUserSelect = userSelect || "";
          }
          userSelect = "";
          state = "default";
        }
      });
    }, 300);
  } else {
    if (target && elementMap.has(target)) {
      let prevUserSelect = elementMap.get(target);
      if (target.style.userSelect === "none") {
        target.style.userSelect = prevUserSelect ?? "";
      }
      if (target.getAttribute("style") === "") {
        target.removeAttribute("style");
      }
      elementMap.delete(target);
    }
  }
}

// node_modules/.pnpm/@zag-js+dom-event@0.6.0/node_modules/@zag-js/dom-event/dist/chunk-DTOO4YSM.mjs
function isVirtualPointerEvent(e) {
  return e.width === 0 && e.height === 0 || e.width === 1 && e.height === 1 && e.pressure === 0 && e.detail === 0 && e.pointerType === "mouse";
}
function isVirtualClick(e) {
  if (e.mozInputSource === 0 && e.isTrusted)
    return true;
  return e.detail === 0 && !e.pointerType;
}
var isLeftClick = (e) => e.button === 0;
var isContextMenuEvent = (e) => {
  return e.button === 2 || isCtrlKey(e) && e.button === 0;
};
var isMac2 = () => /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);
var isCtrlKey = (e) => isMac2() ? e.metaKey && !e.ctrlKey : e.ctrlKey && !e.metaKey;

// node_modules/.pnpm/@zag-js+dom-event@0.6.0/node_modules/@zag-js/dom-event/dist/chunk-OY76JBTY.mjs
var keyMap = {
  Up: "ArrowUp",
  Down: "ArrowDown",
  Esc: "Escape",
  " ": "Space",
  ",": "Comma",
  Left: "ArrowLeft",
  Right: "ArrowRight"
};
var rtlKeyMap = {
  ArrowLeft: "ArrowRight",
  ArrowRight: "ArrowLeft"
};
function getEventKey(event, options = {}) {
  const { dir = "ltr", orientation = "horizontal" } = options;
  let { key } = event;
  key = keyMap[key] ?? key;
  const isRtl = dir === "rtl" && orientation === "horizontal";
  if (isRtl && key in rtlKeyMap) {
    key = rtlKeyMap[key];
  }
  return key;
}

// node_modules/.pnpm/@zag-js+dom-event@0.6.0/node_modules/@zag-js/dom-event/dist/chunk-UGFZK6TG.mjs
function getNativeEvent(event) {
  return event.nativeEvent ?? event;
}

// node_modules/.pnpm/@zag-js+dom-event@0.6.0/node_modules/@zag-js/dom-event/dist/chunk-4CMEY4E7.mjs
function fireCustomEvent(el, type, init) {
  if (!el)
    return;
  const win = el.ownerDocument.defaultView || window;
  const event = new win.CustomEvent(type, init);
  return el.dispatchEvent(event);
}

export {
  raf,
  getEventTarget,
  isHTMLElement,
  queryAll,
  dataAttr,
  ariaAttr,
  contains,
  createScope,
  getDocument2 as getDocument,
  getWindow,
  nextById,
  prevById,
  first,
  last,
  callAll,
  compact,
  addDomEvent,
  disableTextSelection,
  restoreTextSelection,
  isVirtualPointerEvent,
  isVirtualClick,
  isLeftClick,
  isContextMenuEvent,
  fireCustomEvent,
  getEventKey,
  getNativeEvent
};
//# sourceMappingURL=chunk-7NVEAXV7.js.map
